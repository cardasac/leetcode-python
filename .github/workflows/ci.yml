name: Test Python Solution

on: [push, pull_request]
env:
  PYTHON_VERSION: 3.12

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: poetry
      - name: Install dependencies
        run: poetry install
      - name: Run tests
        run: poetry run pytest --cov=src --cov-branch --cov-report=xml:reports/coverage.xml --junitxml=reports/test-results.xml tests
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.python.coverage.reportPaths=reports/coverage.xml
            -Dsonar.test.exclusions=tests/**
            -Dsonar.coverage.exclusions=tests/**
            -Dsonar.tests=tests/
            -Dsonar.verbose=true
            -Dsonar.sources=.
            -Dsonar.python.version=$PYTHON_VERSION
            -Dsonar.scm.provider=git
            -Dsonar.python.xunit.reportPath=reports/test-results.xml
            -Dsonar.projectKey=cardasac_leetcode-python
            -Dsonar.organization=cardasac
  pyright:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up NPM
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: poetry
      - name: Install and run pyright
        run: |
          poetry install --without dev,test
          npm install -g pyright
          pyright
  qodana:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      checks: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }} # to check out the actual pull request commit, not the merge commit
          fetch-depth: 0 # a full history is required for pull request analysis
      - name: "Qodana Scan"
        uses: JetBrains/qodana-action@v2024.1
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}

  analyze:
    name: Analyze (python)
    runs-on: ubuntu-latest
    timeout-minutes: 360
    permissions:
      # required for all workflows
      security-events: write

      # required to fetch internal or private CodeQL packs
      packages: read

      # only required for workflows in private repositories
      actions: read
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python
          build-mode: none
          queries: security-and-quality
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:python"
